/*
 * Copyright (c) 2016 Lokra Studio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


group = 'com.platform28.seaweedfs'
version = '0.7.4.SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

targetCompatibility = 1.7
sourceCompatibility = 1.7

repositories {
    mavenLocal()
    maven {
        url = uri('http://artifactory.platform28.com:8081/artifactory/libs-release')
        name = "libs-release"
        credentials {
            username 'maven'
            password 'maven'
        }
    }

    maven {
        name = "libs-snapshot"
        url = uri('http://artifactory.platform28.com:8081/artifactory/libs-snapshot')
        credentials {
            username 'maven'
            password 'maven'
        }
    }
}


dependencies {
    compile('com.fasterxml.jackson.core:jackson-databind:2.8.0')
    compile('com.fasterxml.jackson.core:jackson-core:2.8.0')
    compile('org.apache.httpcomponents:httpclient:4.5.2')
    compile('org.apache.httpcomponents:httpmime:4.5.2')
    compile('org.apache.httpcomponents:httpclient-cache:4.5.2')
    compile('org.apache.httpcomponents:httpcore:4.4.4')
    compile('org.ehcache:ehcache:3.1.1')
    compile('org.springframework:spring-core:4.3.1.RELEASE')
    compile('org.springframework:spring-beans:4.3.1.RELEASE')
    testCompile('junit:junit:4.11')
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

publishing {
    repositories {
        maven {
            name = "artifactory"
            def releasesRepoUrl = "http://artifactory.platform28.com:8081/artifactory/simple/libs-release-local"
            def snapshotsRepoUrl = "http://artifactory.platform28.com:8081/artifactory/simple/libs-snapshot-local"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username 'maven'
                password 'maven'
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

